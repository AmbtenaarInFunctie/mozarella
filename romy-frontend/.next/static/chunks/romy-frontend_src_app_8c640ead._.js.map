{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/rogierbarendregt/Documents/GitHub/mozarella/romy-frontend/src/app/%28public%29/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState(\"test@example.com\");\n  const [password, setPassword] = useState(\"password123\");\n  const [error, setError] = useState(\"\");\n  const router = useRouter();\n\n  const handleLogin = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    const res = await fetch(\"/api/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email, password }),\n    });\n\n    const data = await res.json();\n\n    if (res.ok) {\n      document.cookie = `token=${data.user.token}; path=/; max-age=${\n        60 * 60 * 24 * 7\n      }`;\n      router.refresh();\n    } else {\n      setError(data.message);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: \"400px\", margin: \"auto\", paddingTop: \"128px\" }}>\n      <h1 style={{marginBottom: \"16px\"}}>Inloggen</h1>\n      <form onSubmit={handleLogin}>\n        <input\n          className=\"border-2 form-control mb-3 p-3\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          className=\"border-2 form-control mb-3 p-3\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n          style={{ width: \"100%\", marginBottom: \"16px\", padding: \"8px\" }}\n        />\n        <button type=\"submit\" className=\"btn fs-5 btn-primary\">\n          Log in\n        </button>\n      </form>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,6LAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,6LAAQ,EAAC;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,6LAAQ,EAAC;IACnC,MAAM,SAAS,IAAA,sKAAS;IAExB,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAEhB,MAAM,MAAM,MAAM,MAAM,cAAc;YACpC,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,IAAI,IAAI,EAAE,EAAE;YACV,SAAS,MAAM,GAAG,AAAC,SACjB,OADyB,KAAK,IAAI,CAAC,KAAK,EAAC,sBAE1C,OADC,KAAK,KAAK,KAAK;YAEjB,OAAO,OAAO;QAChB,OAAO;YACL,SAAS,KAAK,OAAO;QACvB;IACF;IAEA,qBACE,iNAAC;QAAI,OAAO;YAAE,UAAU;YAAS,QAAQ;YAAQ,YAAY;QAAQ;;0BACnE,iNAAC;gBAAG,OAAO;oBAAC,cAAc;gBAAM;0BAAG;;;;;;0BACnC,iNAAC;gBAAK,UAAU;;kCACd,iNAAC;wBACC,WAAU;wBACV,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,QAAQ;;;;;;kCAEV,iNAAC;wBACC,WAAU;wBACV,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC3C,QAAQ;wBACR,OAAO;4BAAE,OAAO;4BAAQ,cAAc;4BAAQ,SAAS;wBAAM;;;;;;kCAE/D,iNAAC;wBAAO,MAAK;wBAAS,WAAU;kCAAuB;;;;;;;;;;;;YAIxD,uBAAS,iNAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAM;0BAAI;;;;;;;;;;;;AAG7C;GAvDwB;;QAIP,sKAAS;;;KAJF","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/rogierbarendregt/Documents/GitHub/mozarella/romy-frontend/src/app/providers.tsx"],"sourcesContent":["\"use client\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    mutations: {\n      onError: (error) => {\n        console.error(error);\n      },\n    },\n  },\n});\n\nexport default function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AAAA;AADA;;;AAEA,MAAM,cAAc,IAAI,mNAAW,CAAC;IAClC,gBAAgB;QACd,WAAW;YACT,SAAS,CAAC;gBACR,QAAQ,KAAK,CAAC;YAChB;QACF;IACF;AACF;AAEe,SAAS,UAAU,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;IAChC,qBACE,iNAAC,oOAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C;KAJwB","debugId":null}}]
}